C51 COMPILER V9.60.0.0   LCD1602                                                           05/19/2021 23:08:33 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\lcd1602.obj
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE lcd1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\l
                    -cd1602.lst) TABS(2) OBJECT(.\Objects\lcd1602.obj)

line level    source

   1          #include "lcd1602.h"
   2          #include "delay.h"
   3          
   4          
   5          u8 code number[10]={"0123456789"};
   6          
   7          /*******************************************************************************
   8          * 函 数 名         : LcdWriteCom
   9          * 函数功能       : 向LCD写入一个字节的命令
  10          * 输    入         : com
  11          * 输    出         : 无
  12          *******************************************************************************/
  13          #ifndef LCD1602_4PINS  //当没有定义这个LCD1602_4PINS时
  14          void Write_LCD_Command(uchar com)   //写入命令
  15          {
  16   1        LCD1602_EN = 0;     //使能
  17   1        LCD1602_RS = 0;    //选择发送命令
  18   1        LCD1602_RW = 0;    //选择写入
  19   1        
  20   1        LCD1602_DATAPINS = com;     //放入命令
  21   1        Lcd1602_Delay1ms(1);    //等待数据稳定
  22   1      
  23   1        LCD1602_EN = 1;           //写入时序
  24   1        Lcd1602_Delay1ms(5);    //保持时间
  25   1        LCD1602_EN = 0;
  26   1      }
  27          #else 
              void Write_LCD_Command(uchar com)   //写入命令
              {
                LCD1602_EN = 0;  //使能清零
                LCD1602_RS = 0;  //选择写入命令
                LCD1602_RW = 0;  //选择写入
              
                LCD1602_DATAPINS = com; //由于4位的接线是接到P0口的高四位，所以传送高四位不用改
                Lcd1602_Delay1ms(1);
              
                LCD1602_EN = 1;  //写入时序
                Lcd1602_Delay1ms(5);
                LCD1602_EN = 0;
              
                LCD1602_DATAPINS = com << 4; //发送低四位
                Lcd1602_Delay1ms(1);
              
                LCD1602_EN = 1;  //写入时序
                Lcd1602_Delay1ms(5);
                LCD1602_EN = 0;
              }
              #endif
  49          /*******************************************************************************
  50          * 函 数 名         : LcdWriteData
  51          * 函数功能       : 向LCD写入一个字节的数据
  52          * 输    入         : dat
  53          * 输    出         : 无
  54          *******************************************************************************/       
C51 COMPILER V9.60.0.0   LCD1602                                                           05/19/2021 23:08:33 PAGE 2   

  55          #ifndef   LCD1602_4PINS      
  56          void Write_LCD_Data(uchar dat)      //写入数据
  57          {
  58   1        LCD1602_EN = 0; //使能清零
  59   1        LCD1602_RS = 1; //选择输入数据
  60   1        LCD1602_RW = 0; //选择写入
  61   1      
  62   1        LCD1602_DATAPINS = dat; //写入数据
  63   1        Lcd1602_Delay1ms(1);
  64   1      
  65   1        LCD1602_EN = 1;   //写入时序
  66   1        Lcd1602_Delay1ms(5);   //保持时间
  67   1        LCD1602_EN = 0;
  68   1      }
  69          #else
              void Write_LCD_Data(uchar dat)      //写入数据
              {
                LCD1602_EN = 0;   //使能清零
                LCD1602_RS = 1;   //选择写入数据
                LCD1602_RW = 0;   //选择写入
              
                LCD1602_DATAPINS = dat; //由于4位的接线是接到P0口的高四位，所以传送高四位不用改
                Lcd1602_Delay1ms(1);
              
                LCD1602_EN = 1;   //写入时序
                Lcd1602_Delay1ms(5);
                LCD1602_E = 0;
              
                LCD1602_DATAPINS = dat << 4; //写入低四位
                Lcd1602_Delay1ms(1);
              
                LCD1602_EN = 1;   //写入时序
                Lcd1602_Delay1ms(5);
                LCD1602_EN = 0;
              }
              #endif
  91          
  92          void LCD_Init() //1602LCD 初始化
  93          {
  94   1          Write_LCD_Command(0x01);//清屏
  95   1          Write_LCD_Command(0x38);//设置8位格式，2行，5*7
  96   1          Write_LCD_Command(0x0c);//整体显示，关光标，不闪烁
  97   1          Write_LCD_Command(0x06);//设定输入方式，增量不移位
  98   1      }
  99          
 100          
 101          /****************写一个字符数据到指定的位置***************/
 102          void DisplayOneChar(uchar X,uchar Y,uchar DData)
 103          {           
 104   1          Y&=1;           
 105   1          X&=15;            
 106   1          if(Y)X|=0x40;         
 107   1          X|=0x80;      
 108   1          Write_LCD_Command(X);   
 109   1          Write_LCD_Data(DData+0x30);   
 110   1      }
 111          
 112          /****************LCD1602设置地址***************/
 113          void Lcd1602SetCursor(uchar X,uchar Y)
 114          {
 115   1        Y&=1;           
 116   1        X&=15;            
C51 COMPILER V9.60.0.0   LCD1602                                                           05/19/2021 23:08:33 PAGE 3   

 117   1        if(Y)X|=0x40;         
 118   1        X|=0x80;      
 119   1        Write_LCD_Command(X);
 120   1      
 121   1      }
 122            
 123          /****************写多个个字符数据到指定的位置***************/
 124          void DisplayChars(uchar X,uchar Y,uchar *str)
 125          {   
 126   1         Lcd1602SetCursor(X, Y);   //设置起始地址
 127   1         while (*str != '\0')  
 128   1          {
 129   2              Write_LCD_Data(*(str++));
 130   2          }     
 131   1      }
 132          
 133          
 134          
 135          ///*********************************************************************
 136          //函数名称:Disp_number()
 137          //功能描述:显示四数字
 138          //入口参数:num:显示的数字 n:数字位数
 139          //返回值:无
 140          //************************************************************************/
 141          void Disp_number(uchar X,uchar Y,uint num,u8 n)
 142          { 
 143   1            u8 a; //个位 
 144   1            u8 b; //十位
 145   1            u8 c; //百位
 146   1            u8 d; //千位
 147   1            u8 e; //万位
 148   1      
 149   1        Y&=1;           
 150   1        X&=15;            
 151   1        if(Y)X|=0x40;         
 152   1        X|=0x80;      
 153   1        Write_LCD_Command(X);
 154   1            switch(n)
 155   1            {
 156   2            case 1:Write_LCD_Data(num);
 157   2            break;
 158   2            case 2:b=num/10;
 159   2            a=num%10;
 160   2            Write_LCD_Data(number[b]);
 161   2            Write_LCD_Data(number[a]);
 162   2            break;
 163   2            case 3:c=num/100;
 164   2            b=num%100/10;
 165   2            a=num%10;
 166   2            Write_LCD_Data(number[c]);
 167   2            Write_LCD_Data(number[b]);
 168   2            Write_LCD_Data(number[a]);
 169   2            break;
 170   2            case 4:d=num/1000;
 171   2            c=num%1000/100;
 172   2            b=num%1000%100/10;
 173   2            a=num%10;
 174   2            Write_LCD_Data(number[d]);
 175   2            Write_LCD_Data(number[c]);
 176   2            Write_LCD_Data(number[b]);
 177   2            Write_LCD_Data(number[a]);
 178   2            break;
C51 COMPILER V9.60.0.0   LCD1602                                                           05/19/2021 23:08:33 PAGE 4   

 179   2            case 5:
 180   2            e=num/10000;
 181   2            d=num%10000/1000;
 182   2            c=num%1000/100;
 183   2            b=num%100/10;
 184   2            a=num%10;
 185   2            Write_LCD_Data(number[e]);
 186   2            Write_LCD_Data(number[d]);
 187   2            Write_LCD_Data(number[c]);
 188   2            Write_LCD_Data(number[b]);
 189   2            Write_LCD_Data(number[a]);
 190   2            break;
 191   2            }
 192   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    568    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
